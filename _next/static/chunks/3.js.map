{"version":3,"file":"static/chunks/3.js","sources":["webpack:///./assets/utils/hooks/useRenderCounter.js","webpack:///./components/_demo/CandyDispenserDemo.js"],"sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\nconst useRenderCounter = () => {\r\n  const ref = useRef()\r\n  useEffect(() => {\r\n    ref.current.textContent = Number(ref.current.textContent || '0') + 1\r\n  })\r\n  return (\r\n    <span\r\n      style={{\r\n        backgroundColor: '#ccc',\r\n        borderRadius: 4,\r\n        padding: '2px 4px',\r\n        fontSize: '0.8rem',\r\n        margin: '0 6px',\r\n        display: 'inline-block',\r\n      }}\r\n      ref={ref}\r\n    />\r\n  )\r\n}\r\n\r\nexport default useRenderCounter\r\n","import React from 'react'\r\nimport RenderCounter from '@utils/hooks/useRenderCounter'\r\n\r\nconst CandyDispenserDemo = () => {\r\n  const initialCandies = ['Apple', 'Banana', 'Orange', 'PineApple']\r\n  const [candies, setCandies] = React.useState(initialCandies)\r\n  const dispense = candy => {\r\n    setCandies(allCandies => allCandies.filter(c => c !== candy))\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <RenderCounter />\r\n        Available Candy\r\n      </div>\r\n      {candies.length === 0 ? (\r\n        <button type=\"button\" onClick={() => setCandies(initialCandies)}>\r\n          refill\r\n        </button>\r\n      ) : (\r\n        <ul>\r\n          {candies.map(candy => (\r\n            <li key={candy}>\r\n              <button type=\"button\" onClick={() => dispense(candy)}>\r\n                grab\r\n              </button>{' '}\r\n              {candy}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CandyDispenserDemo\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAYA;AACA;AACA;;;;A","sourceRoot":""}